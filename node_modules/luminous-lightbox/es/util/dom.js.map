{"version":3,"sources":["../../src/js/util/dom.js"],"names":["HAS_DOM_2","HTMLElement","HAS_SHADOW","ShadowRoot","isDOMElement","obj","nodeType","nodeName","addClasses","el","classNames","forEach","className","classList","add","removeClasses","remove"],"mappings":";;AAAA;AACA;AACA,IAAMA,SAAS,GAAG,QAAOC,WAAP,yCAAOA,WAAP,OAAuB,QAAzC;AACA,IAAMC,UAAU,GAAG,OAAOC,UAAP,KAAsB,WAAzC;AAEA;;;;;;AAKA,OAAO,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AAChC,MAAIH,UAAU,IAAIG,GAAG,YAAYF,UAAjC,EAA6C;AAC3C,WAAO,IAAP;AACD;;AACD,SAAOH,SAAS,GACZK,GAAG,YAAYJ,WADH,GAEZI,GAAG,IACD,QAAOA,GAAP,MAAe,QADjB,IAEEA,GAAG,KAAK,IAFV,IAGEA,GAAG,CAACC,QAAJ,KAAiB,CAHnB,IAIE,OAAOD,GAAG,CAACE,QAAX,KAAwB,QAN9B;AAOD;AAED;;;;;;;AAMA,OAAO,SAASC,UAAT,CAAoBC,EAApB,EAAwBC,UAAxB,EAAoC;AACzCA,EAAAA,UAAU,CAACC,OAAX,CAAmB,UAASC,SAAT,EAAoB;AACrCH,IAAAA,EAAE,CAACI,SAAH,CAAaC,GAAb,CAAiBF,SAAjB;AACD,GAFD;AAGD;AAED;;;;;;;AAMA,OAAO,SAASG,aAAT,CAAuBN,EAAvB,EAA2BC,UAA3B,EAAuC;AAC5CA,EAAAA,UAAU,CAACC,OAAX,CAAmB,UAASC,SAAT,EAAoB;AACrCH,IAAAA,EAAE,CAACI,SAAH,CAAaG,MAAb,CAAoBJ,SAApB;AACD,GAFD;AAGD","sourcesContent":["// This is not really a perfect check, but works fine.\n// From http://stackoverflow.com/questions/384286\nconst HAS_DOM_2 = typeof HTMLElement === \"object\";\nconst HAS_SHADOW = typeof ShadowRoot !== \"undefined\";\n\n/**\n * Determines whether an object is a DOM element or not.\n * @param {!Object} obj Object to check\n * @return {boolean} True if object is an element\n */\nexport function isDOMElement(obj) {\n  if (HAS_SHADOW && obj instanceof ShadowRoot) {\n    return true;\n  }\n  return HAS_DOM_2\n    ? obj instanceof HTMLElement\n    : obj &&\n        typeof obj === \"object\" &&\n        obj !== null &&\n        obj.nodeType === 1 &&\n        typeof obj.nodeName === \"string\";\n}\n\n/**\n * Adds an array of classes to an element\n * @param {!Element} el Element to add classes to\n * @param {!Array<!string>} classNames Class names to add\n * @return {void}\n */\nexport function addClasses(el, classNames) {\n  classNames.forEach(function(className) {\n    el.classList.add(className);\n  });\n}\n\n/**\n * Removes an array of classes from an element\n * @param {!Element} el Element to remove classes from\n * @param {!Array<!string>} classNames Classes to remove\n * @return {void}\n */\nexport function removeClasses(el, classNames) {\n  classNames.forEach(function(className) {\n    el.classList.remove(className);\n  });\n}\n"],"file":"dom.js"}